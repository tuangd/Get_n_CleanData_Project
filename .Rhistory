?read.table
xtest <- read.table("./data/X_test.txt")
str(xtest)
ytest <- read.table("./data/y_test.txt")
head(ytest)
tail(ytest)
ytest
subjectTest <- read.table("./data/subject_test.txt")
head(subjectTest)
tail(subjectTest)
str(subjectTest)
tail(ytest)
head(xtest)
ls
rm(ls())
ls()
rm(c(ls()))
rm("ls()")
rm(ls())
rm(list=ls())
xtest <- read.table("./data/test/X_test.txt")
ytest <- read.table("./data/test/y_test.txt")
activityLabel <- read.table("./data/activity_labels.txt")
head(y, n=1)
head(ytest, n=1)
head(xtest, n= 1)
features <- read.table("./data/features.txt")
features
xtrain <- read.table("./data/train/X_train.txt")
ytrain <- read.table("./data/train/y_train.txt")
head(xtest, n=1)
dim(xtest)
dim(ytest)
?cbind
m <- cbind(1, 1:7)
m
m <- cbind(m, 8:14)[, c(1, 3, 2)]
m
cbind(1:7, diag(3))
cbind(0, rbind(1, 1:3))
xx <- data.frame(I = rep(0,2))
xx
cbind(xx, X = rbind(a = 1, b = 1:3))
ytest
cbind(xx, X = rbind(a = 1, b = 1:3))
xx
rm(m)
rm(xx)
rbind(xtest,xtrain)
xcombind <- rbind(xtest, xtrain)
rm(xcombind)
xyTest <- cbind(ytest, xtest)
xyTrain <- cbind(ytrain,xtrain)
trainTest <- rbind(xyTrain,xyTest)
head(features)
library(dplyr)
featuresName <- select(features, -V1)
featuresName
name(trainTest)
names(trainTest)
names(trainTest) <- featureName
names(trainTest) <- featuresName
names(trainTEst)
names(trainTest)
names(trainTest) <- c(featuresName)
names(trainTest)
featuresName
names(trainTest) <- featuresName[1,]
names(trainTest)
trainTest
s(featuresName)
?t
featuresName <- t(featuresName)
names(trainTest) <- c(featuresName)
names(trainTest)
featuresName[1] <- c("label")
rm(featuresName)
featuresName <- select(features, -V1)
head(featuresName)
featuresName <- rbind(c("label"), featuresName)
?cbind
featuresName
featuresName[1,1] <- c("label")
class(featuresName[1,1])
class(featuresName[1,2])
class(featuresName[2,1])
rm(featuresName)
class(xtest[1,1])
rm(features)
features <- read.table("./data/features.txt", straingsAsFactors = FALSE)
features <- read.table("./data/features.txt", stringsAsFactors = FALSE)
class(features[1,2])
featuresName <- select(features, -V1)
featuresName <- rbind(c("label"), featuresName)
head(featuresName, n=1)
featuresName <- t(featuresName)
name(trainTest)
names(trainTest) <- c(featuresName)
head(trainTest)
trainTest2 <- select(trainTest, mean | Mean | std)
??dplyr::select
trainTest2 <- select(trainTest, contain("mean") | contain("Mean") | contain("std"))
trainTest2 <- select(trainTest, contains("mean") | contains("Mean") | contains("std"))
trainTest2 <- select(trainTest, contains("mean") , contains("Mean") , contains("std"))
trainTest2 <- select(trainTest, contains("mean"))
trainTest2 <- select(trainTest, contains("Mean"))
subjectTrain <- read.table("./data/train/subject_train.txt", strings.asFactor=FALSE)
subjectTrain <- read.table("./data/train/subject_train.txt", stringsasFactor=FALSE)
subjectTrain <- read.table("./data/train/subject_train.txt", stringasFactor=FALSE)
?read.table
subjectTrain <- read.table("./data/train/subject_train.txt", stringsAsFactors=FALSE)
head(subjectTrain)
str(subjectTrain)
subjectTest <- read.table("./data/test/subject_test.txt", stringsAsFactors=FALSE)
str(subjectTest)
?colnames
?dplyr::unique
??dplyr::unique
?grepl
?gsub
gsub("([ab])", "\\1_\\1_", "abc and ABC")
gsub("1", "a", "1")
stringr
?stringr
install.packages("stringr")
??stringr
fruits <- c("one apple", "two pears", "three bananas")
library(stringr)
str_replace(fruits, "[aeiou]", "-")
str_replace_all(fruits, "[aeiou]", "-")
str_replace_all(fruits, "([aeiou])", "")
str_replace_all(fruits, "([aeiou])", "\\1\\1")
str_replace_all(fruits, "[aeiou]", c("1", "2", "3"))
head(ytest)
mutate(ytest, activities = str_replace_all(V1, "5", "WALK"))
mutate(ytest, activities = str_replace_all(V1, "[123456]", c("a","b","c","d","e","f")))
mutate(ytest, activities = str_replace_all(V1, c(1,2,3,4,5,6), c("a","b","c","d","e","f")))
mutate(ytest, activities = str_replace_all(V1, c("1","2","3","4","5","6"), c("a","b","c","d","e","f")))
mutate(ytest, activities = str_replace_all(V1, "([123456])", c("a","b","c","d","e","f")))
mutate(ytest, activities = str_replace_all(V1, "5", "WALK"))
mutate(ytest, activities = str_replace_all(V1, "([123456])", c("a","b","c","d","e","f")))
mutate(ytest, activities = str_replace_all(V1, c("1","2","3","4","5","6"), c("a","b","c","d","e","f")))
head(ytest)
?gsub
mutate(ytest, activities = str_replace_all(V1, "([123456])", c("a","b","c","d","e","f")))
activityLabel
activities <- activityLabel[,1:6]
activities <- activityLabel[1:6,2]
activities
mutate(ytest, activities = str_replace_all(V1, 1:6, activities)))
mutate(ytest, activities = str_replace_all(V1, 1:6, activities))
mutate(ytest, activities = str_replace_all(V1, "1:6", activities))
num <- as.character(1:6)
num
mutate(ytest, activities = str_replace_all(V1, num, activities))
ytest
mutate(ytest, activities = str_replace_all(V1, num, activities))
mutate(ytest, activities = str_replace_all(V1, "1", activities[1]))
mutate(ytest, activities = str_replace_all(V1, "123456", activities[1:6]))
mutate(ytest, activities = str_replace_all(V1, "2", activities[2]))
ytest2 <- mutate(ytest, activities = str_replace_all(V1, "2", activities[2]))
ytest2 <- mutate(ytest, activities = str_replace_all(V1, "1", activities[1]))
ytest2 <- mutate(ytest, activities = str_replace_all(V1, "3", activities[3]))
ytest2 <- mutate(ytest, activities = str_replace_all(V1, "4", activities[4]))
ytest2 <- mutate(ytest, activities = str_replace_all(V1, "5", activities[5]))
ytest2 <- mutate(ytest, activities = str_replace_all(V1, "6", activities[6]))
str(ytest2)
ytest2
ytest2 <- mutate(ytest, V1 = str_replace_all(V1, "1", activities[1]))
ytest2 <- mutate(ytest, V1 = str_replace_all(V1, "2", activities[2]))
str(ytest2)
ytest2
ytest2 <- ytest
ytest2 <- mutate(ytest2, V1 = str_replace_all(V1, "1", activities[1]))
ytest2 <- mutate(ytest2, V1 = str_replace_all(V1, "2", activities[2]))
ytest2 <- mutate(ytest2, V1 = str_replace_all(V1, "3", activities[3]))
ytest2 <- mutate(ytest2, V1 = str_replace_all(V1, "4", activities[4]))
ytest2 <- mutate(ytest2, V1 = str_replace_all(V1, "5", activities[5]))
ytest2 <- mutate(ytest2, V1 = str_replace_all(V1, "6", activities[6]))
ytest2
str(subjectTest)
str(subjectTrain)
head(features)
?grepl
??dplyr::filter
features[,grepl("mean")]
features[,grepl("mean",features)]
features[,grepl("mean",features[,2])]
features[,grepl("mean",features)]
features[,grepl("mean",features[,2])]
features[,grepl("mean",features[,])]
features[,grepl("mean",features[,1])]
features[,grepl("mean",features[,0])]
features[,grepl("mean",features[,2])]
features[,grepl("mean",features[,])]
str(features)
features[,2]
features[,grepl("mean",features[,2])]
features[,grepl("mean",features[[,2]])]
features[,grepl("mean",features[[1,2]])]
features[[1,2]]
features[1,2]
head(features)
features[,grepl("mean", features$V2)]
greap("mean", features$V2)
grepl("mean", features$V2)
features[,grepl("mean", features$V2)]
features[ , grepl("mean", features$V2)]
features[ , (grepl("mean", features$V2))]
features[,grepl("mean", features$V2)]
features[,c(grepl("mean", features$V2))]
features[ , grepl("mean", features$V2)]
features[, grepl("mean", features$V2)]
features[, ,grepl("mean", features$V2)]
features[, grepl("mean", features$V2) == TRUE]
features[, TRUE]
features[, TRUE,FALSE]
features[, grepl("mean", features$V2) == TRUE]
features[, grepl("mean", features$V2) == TRUE]
features[, grepl("mean", features$V2)]
features[, grepl("mean", features$V2, ignore.case=TRUE)]
grepl("[[:mean:]]", features)
grepl("mean", features)
grepl("mean", features$V2)
grepl("mean" | "ste", features$V2)
grepl("mean" | "std", features$V2)
features[,grepl("mean", features$V2)]
features[,grepl("mean",features$V2)]
features[grepl("mean",features$V2)]
features[[grepl("mean",features$V2)]]
features[[,grepl("mean",features$V2)]]
features[,grepl("mean",features$V2)]
selectF <- grepl("mean", features$v2)
features[,seletF]
features[,selectF]
head(selectF)
grepl("mean", features$V2)
selectF <- grepl("mean", features$v2)
selectF <- as.logical(grepl("mean", features$v2))
library(stringr)
str_match_all(features$V2, "mean")
selectF <- str_match_all(features$V2, "mean")
selectF
?str_match_all
?stringr
??stringr
grepl("mean", features$V2)
selectF <- sapply(features$V2, grep, "mean")
selectF
selectF <- sapply(features$V2, grepl, "mean")
selectF <- sapply(features$V2, grepl, "mean", features$V2)
selectF <- apply(features$V2, grepl, "mean")
?apply
selectF <- apply(features,2, grepl, "mean")
selectF <- sapply(features$V2, grepl, "mean", features$V2)
?sapply
selectF <- sapply(features, grepl, "mean")
selectF <- sapply(features$V2, grepl, "mean")
selectF
install.packages("grepl")
rm(selectF)
selectF <- sapply(features$V2, grepl, "mean")
selectF
selectF <- lapply(features$V2, grepl, "mean")
head(selectF)
selectF
selectF <- mapply(grepl, features$V2, "mean")
selectF
selectF <- mapply(grepl, featuresName, "mean")
selectF <- as.list(mapply(grepl, featuresName, "mean"))
selectF
?grepl
selectF <- as.list(mapply(grepl, featuresName, "(?=mean)"))
selectF <- as.list(mapply(grepl, featuresName, "(mean)(std))
)
selectF <- as.list(mapply(grepl, featuresName, "(mean)(std)")
_
selectF <- as.list(mapply(grepl, featuresName, "(mean)(std)"))
selectF <- as.list(mapply(grepl, featuresName$V2, "(mean)(std)"))
selectF <- as.list(lapply(grepl, featuresName$V2, "(mean)(std)"))
selectF <- as.list(sapply(grepl, featuresName$V2, "(mean)(std)"))
selectF <- lapply(grepl, featuresName$V2, "(mean)(std)")
selectF <- lapply(featuresName$V2, grep, "(mean)(std)")
selectF <- lapply(features$V2, grep, "(mean)(std)")
selectF <- sapply(features$V2, grep, "(mean)(std)")
selectF <- sapply(features$V2, grep, "std")
colNames <- (featuresName[(grepl("mean",featureName) | grepl("std",featureName) | grepl("subject",featureName) | grepl("activity",featureName)) ==TRUE])
colNames <- (featuresName[(grepl("mean",featuresName) | grepl("std",featuresName) | grepl("subject",featuresName) | grepl("activity",featuresName)) ==TRUE])
DT1 <- features[ , colNames, with = FALSE]
rm(features)
features <- read.table("./data/features.txt", stringsAsFactor = FALSE)
DT1 <- features[ , colNames, with = FALSE]
DT1 <- features[ , colNames]
names(xtest)
names(trainTEst)
names(trainTest)
DT1 <- trainTest[ , colNames, with = FALSE]
DT1 <- trainTest[ , colNames]
tbl_df(DT1)
library(dplyr)
tbl_df(DT1)
DT1
DT2 <- tbl_df(DT1)
DT2
subject <- colbind(subjectTrain, subjectTest)
subject <- cbind(subjectTrain, subjectTest)
subject <- rbind(subjectTrain, subjectTest)
DT1 <- cbind(DT1, subject)
names(DT1)
names(DT1$V1) <- c("subject")
names(DT1)
names(DT1[80])
names(DT1[80]) <- c("subjects")
names(DT1[80])
names(DT1[80])
names(DT1)
?names
?renames
?rename
rename(DT1, V1, subjects)
rename(DT1, V1=subjects)
rename(DT1, V1="subjects")
rename(DT1, V1=c("subjects"))
rename(DT1, V1 = c("subjects"))
names(DT1[80]) <- "subjects"
names(DT1)
names(DT1[80]) <- "test"
names(DT1)
names(DT1[80]) <- "test"
rename(DT1, c("V1" = "subjects"))
rename(DT1, c("V1" = "subjects"), named.FALSE)
??dplyr::rename
head(D1)
head(DT!)
head(DT1)
library(dplyr)
mutate(DT1, subjects = V1)
D1 <- mutate(DT1, subjects = V1)
DT1 <- select(D1, -V1)
names(DT1)
rm(D1)
group_by(DT1, subjects)
summarize_each(DT1)
?summarize
summarize(DT1, mean())
?summarise_each
summarise_each(D1, mean())
summarise_each(D1, funs(mean)
)
summarise_each(DT1, funs(mean))
ytest2
ytrain2 <- ytrain
ytrain2 <- mutate(ytrain2, V1=str_replace_all(V1, "1", activities[1]))
ytrain2 <- mutate(ytrain2, V1=str_replace_all(V1, "2", activities[2]))
ytrain2 <- mutate(ytrain2, V1=str_replace_all(V1, "3", activities[3]))
ytrain2 <- mutate(ytrain2, V1=str_replace_all(V1, "4", activities[4]))
ytrain2 <- mutate(ytrain2, V1=str_replace_all(V1, "5", activities[5]))
ytrain2 <- mutate(ytrain2, V1=str_replace_all(V1, "6", activities[6]))
ytrain2
yTrainTest <- rbind(ytrain2, ytest2)
names(yTrainTest)
names(yTrainTest) <- "activities"
yTrainTest
names(yTrainTest)
DT1 <- cbind(DT1, yTrainTest)
names(DT1)
?group_by
by_sub_act <- group_by(DT1, subjects, activities)
summarise_each(by_sub_act, mean())
summarise_each(by_sub_act, funs(mean))
tidyData <- summarise_each(by_sub_act, funs(mean))
str(tidyData)
head(tidyData)
tail(tidyData)
View(subject)
View(features)
View(subjectTest)
View(activityLabel)
View(features)
rm(featuresName)
colNames
coltemp <- colnames
rm(colnames)
rm(coltemp)
colNamesTemp <- colNames
rm(colNames)
colNames <- features[,2]
leangth(colNames)
length(colNames)
colNames[562] <- "subjects"
length(colNames)
colNames[563] <- "activities"
colNames <- (colNames[(grepl("mean",colNames) |
grepl("std",colNames) |
grepl("subjects",colNames) |
grepl("activities",colNames)) ==TRUE])
colNames
rm(xtest)
rm(xtrain)
rm(ytest)
rm(ytrain)
rm(ytest2)
rm(ytrain2)
rm(xyTest)
rm(xyTrain)
rm(yTrainTest)
rm(trainTest)
rm(subject)
rm(subjectTest)
rm(subjectTrain)
rm(activities)
rm(activityLabel)
rm(fruits)
rm(num)
rm(selectF)
library(dplyr)
##start loading files that we need
xtest <- read.table("./data/test/X_test.txt", stringsAsFactors = FALSE)
ytest <- read.table("./data/test/y_test.txt", stringsAsFactors = FALSE)
subtest <- read.table("./data/test/subject_test.txt", stringsAsFactors = FALSE)
xtrain <- read.table("./data/train/X_train.txt", stringsAsFactors = FALSE)
ytrain <- read.table("./data/train/y_train.txt", stringsAsFactors = FALSE)
subtrain <- read.table("./data/train/subject_train.txt", stringsAsFactors = FALSE)
features <- read.table("./data/features.txt", stringsAsFactors = FALSE)
activities <- read.table("./data/activity_labels.txt", stringsAsFactors = FALSE)
xTrainTest <- rbind(xtrain, xtest)
subTrainTest <- rbind(subtrain, subtest)
yTrainTest <- rbind(ytrain, ytest)
Data1 <- cbind(xTrainTest, subTrainTest)
Data1 <- cbind(Data1, yTrainTest)
names(Data1) <- colNames
names(Data1)
View(features)
features[562,2] <- "subjects"
View(features)
features[562,] <- c(562,"subjects")
View(features)
features[563,] <- c(563, "activities")
features
names(Data1) <- c(features[,2])
names(Data1)
colNames <- features[,2]
colNames <- (colNames[(grepl("mean",colNames) |
grepl("std",colNames) |
grepl("subjects",colNames) |
grepl("activities",colNames)) ==TRUE])
Data1 <- Data1[ , colNames]
str(Data1)
activitiesLabel <- read.table("./data/activity_labels.txt", stringsAsFactors = FALSE)
View(activitiesLabel)
mutate(Data1, activities = str_replace_all(activities, "1", activitiesLabel[1]))
mutate(Data1, activities = str_replace_all(activities, "1", activitiesLabel[1,2]))
Data1 <- mutate(Data1, activities = str_replace_all(activities, "1", activitiesLabel[1,2]))
Data1 <- mutate(Data1, activities = str_replace_all(activities, "2", activitiesLabel[2,2]))
Data1 <- mutate(Data1, activities = str_replace_all(activities, "3", activitiesLabel[3,2]))
Data1 <- mutate(Data1, activities = str_replace_all(activities, "4", activitiesLabel[4,2]))
Data1 <- mutate(Data1, activities = str_replace_all(activities, "5", activitiesLabel[5,2]))
Data1 <- mutate(Data1, activities = str_replace_all(activities, "6", activitiesLabel[6,2]))
View(Data1)
Data2 <- group_by(Data1, subjects, activities)
rm(DT1)
rm(DT2)
tidyData <- summarise_each(Data2, funs(mean))
View(tidyData)
?write.table
write.table(tidyData, file="./tidyData.txt")
write.table(tidyData, file="./tidyData.txt", row.name=FALSE)
head(subtest)
str(subtest)
View(tidyData)
names(tidyData)
